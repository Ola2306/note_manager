# Grade 1. Этап 2. Задание 2.
# Работа с циклами и условиями
# Изменение статуса заметки на основе ввода пользователя

# Функция ввода значения статуса заметки
def inp_status():
    # Ввод номера статуса
    print(f'Введите информацию о текушем статусе заметки, \n выбрав номер статуса (целое число от 1 до {len(statuses)}) или набрав его наименование: ')
    print('Выберите номер статуса заметки или наберите наименование статуса заметки: ')
    print(f'Статус №1: {statuses[1]}')
    print(f'Статус №2: {statuses[2]}')
    print(f'Статус №3: {statuses[3]}')
    print(f'Статус №4: {statuses[4]}' )
    # Ввод пользователем номера статуса заметки: ii - номер статуса заметки
    ii = input('Установить заметке Статус ')
    return  ii

# Функция проверки корректности номера заметки
def korr_stat(ii):
    # проверяем является ли введенное значение числом (да - dd - True, нет - dd - False)
    dd = ii.isdigit()
    # проверяем  корректность введенного номера статуса. В случае некорректности ввода - запрос на повторный ввод номера статуса
    while dd == False:
            print(f'Введено не корректное значение номера или наименования статуса заметки: {ii}.\nДолжно вводиться целое число от 1 до {len(statuses)} или наименование статуса из списка.')
            ii = input('Введите номерили наименование статуса заметки: ')
            #dd = ii.isdigit()
            if ii in spis:
                break
            else:
                dd = ii.isdigit()
                if dd == True and int(ii) >= 1 and int(ii) <= len(statuses):
                    ii = int(ii)
                    break
                else:
                    dd = False
            continue
    # вывод установленного пользователем статуса заметки
    return ii

# Функция прверки действительности статуса заметки
def chang_status():
    # Проверка - менялся ли статус заметки по сревнению с введенным ранее
    print('Если статус изменился - введите: "да"(д) или "yes"(y). \n Если статус заметки не менялся - введите: "нет"(н) или "no" (n): ')
    change = input('Статус заметки изменился? ')
    while not (change in change_stat):
        print(f'Введено не корректное значение. Возможен один из перечисленных ответов на вопрос: {change_stat}')
        print(f'Заметка имеет статус: "{status}". \nЕсли статус изменился - введите: "да"(д) или "yes" (y).')
        print('Если статус заметки не менялся - введите: "нет"(н) или "no"(n): ')
        change = input('Статус заметки изменился? ')
        continue
    if change in change_stat[::2]:
        print('Статус заметки мзменился. Введите новое значение статуса заметки.')
        new = 1
    else:
        print('Статус заметки действующий')
        new = 2
    return new

# Установим стандартные статусы заметки (создадим словарь Статусов заметок - statuses)
statuses = {
    1: 'Получена',
    2: 'В работе',
    3: 'Отложена',
    4: 'Выполнена',
}
# change_stat - список возможных ответов на вопрос об изменении статуча; change - ответ  на вопрос;
# new - 'флаг' надо ли вводить данные о статусе (1 - да, 2 - нет)
ii=''
new = 1
spis = list(statuses.values())
change_stat = ['yes', 'no', 'y', 'n', 'да', 'нет', 'д', 'н', 'Yes', 'No', 'Y', 'N', 'Да', 'Нет', 'Д', 'Н', 'YES', 'NO', 'ДА', 'НЕТ']
status = change = ''
while new == 1:
    i = inp_status()
    # Проверка не ввел ли пользователь значение статуса вместо его номера
    if i in spis:
        status = i
    else:
        i1 = korr_stat (i)
        if i1 in spis:
            status = i1
        else:
            i = int(i1)
            status = statuses[i]
    print(f'Вы установили статус заметки: {status}')
    new = chang_status()
    continue
print(f'Действительный статус заметки: {status}')
