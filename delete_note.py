# Grade 1. Этап 2: Задание 5
# Удаление заметок из списка заметок пользователем
# Реализовано: ввод пользователем списка заметок, хранение азаметок в виде списка словарей.
# При вводе информации учитывается формат вводимых дат. Проверяется чтобы заголовок заметки не был пустым.
# Статус заметки выбирается из стандартного Списка статусов.
# Добавляется ключевое поле ID, содержащее номер заметки.
# Программа позволяет пользователю удалить заметку по имени пользователя или заголовку.
# Обновляет список заметок после удаления. Выводит сообщение, если заметка не найдена.

# Функция проверки корректности номера заметки
def korr_stat(ii):
    # проверяем является ли введенное значение числом (да - dd - True, нет - dd - False)
    dd = ii.isdigit()
    # проверяем  корректность введенного номера/наименования статуса. В случае некорректности ввода - запрос на повторный ввод номера статуса
    while dd == False:
            print(f'Введено не корректное значение номера или наименования статуса заметки: {ii}.\nДолжно вводиться целое число от 1 до {len(statuses)} или наименование статуса из списка.')
            ii = input('Введите номер или наименование статуса заметки: ')
            #dd = ii.isdigit()
            if ii in spis:
                break
            else:
                dd = ii.isdigit()
                if dd == True and int(ii) >= 1 and int(ii) <= len(statuses):
                    ii = int(ii)
                    break
                else:
                    dd = False
            continue
    # вывод установленного пользователем статуса заметки
    return ii

# Функция ввода значения статуса заметки
def inp_status():
    # Ввод номера статуса
    print(f'Введите информацию о текушем статусе заметки, \n выбрав номер статуса (целое число от 1 до {len(statuses)}): ')
    print('Выберите номер статуса заметки: ')
    print(f'Статус №1: {statuses[1]}')
    print(f'Статус №2: {statuses[2]}')
    print(f'Статус №3: {statuses[3]}')
    print(f'Статус №4: {statuses[4]}' )
    # Ввод пользователем номера статуса заметки: ii - номер статуса заметки
    ii = input('Установить заметке Статус ')
    return  ii

# Функция выбора статуса заметки из списка статусов
def stat(ii):
    while True:
        i = inp_status()
        # Проверка не ввел ли пользователь значение статуса вместо его номера
        if i in spis:
            status = i
            break
        else:
            i1 = korr_stat(i)
            if i1 in spis:
                status = i1
                break
            else:
                i = int(i1)
                status = statuses[i]
                break
    return  status

# Функция ввода и хранения списка словарей (заметок)
def inp_note(note1, new):
    ii = ''
    print(f'Вы моэжете добавить новую заметку. Заметка № {new}:')
    end = True
    while True:
        title = input(f"Введите заголовок заметки (для завершения ввода оставьте поле пустым (нажмите Enter) или наберите стоп): ")
        if title == "" or title.lower() == "стоп" or title.lower() == "stop":
            end = False
            print(f'Ввод информации о заметке прекращен.')
        break
    if end == True:
        username = input('Имя пользователя: ')
        content = input('Описание заметки: ')
        status = stat(ii)
        text1 = 'создания'
        created_date = inp_date(date_tmp,text1)
        text1 = 'истечения'
        issue_date = inp_date(date_tmp,text1)
        # дополнение списка введенными данными
        note1 = {
            'ID':new,
            'Пользователь': username,
            'Описание заметки': content,
            'Статус': status,
            'Дата создания ': created_date,
            'Дата создания заметки': created_date,
            'Дата истечения заметки': issue_date,
            'Заголовок': title
        }
    return note1

# Ввод даты начала/окончания заметки и проверка корректности введенной даты (соответствия её требуемому формату "ДД-ММ-ГГГГ")
def inp_date(date_tmp, text1):
    from datetime import datetime
    while True:
        try:
            tnp_date = datetime.strptime(input(f'Введите дату {text1} заметки (дд-мм-гггг): '),'%d-%m-%Y')
        except ValueError:
            print('Введено неверное значение даты. Дата должна быть в формате (дд-мм-гггг)/')
        else:
            date_tmp = tnp_date.strftime("%d-%m-%Y")
            break
    return date_tmp

# вывод информации из списка словарей на экран
def out_note(note):
    if len(note) == 0:
        print('\nСписок заметок пустой.')
    else:
        for i in range(len(note)):
            print(f'Заметка № {note[i]['ID']} : ')
            print(f'Пользователь: {note[i]['Пользователь']} ')
            print(f'Описание заметки: {note[i]['Описание заметки']} ')
            print(f'Статус заметки: {note[i]['Статус']} ')
            print(f'Дата создания заметки (дд-мм-гггг): {note[i]['Дата создания заметки']} ')
            print(f'Заметка актуальна до (дд-мм-гггг): {note[i]['Дата истечения заметки']} ')
            print(f'Заголовок заметки : {note[i]['Заголовок']} ')
    return

note = note1 = []
new = 1
change_stat = ['yes', 'no', 'y', 'n', 'да', 'нет', 'д', 'н', 'Yes', 'No', 'Y', 'N', 'Да', 'Нет', 'Д', 'Н', 'YES', 'NO', 'ДА', 'НЕТ']
change = ''
# Словарь возможных статусов заметки
statuses = {
    1: 'Получена',
    2: 'В работе',
    3: 'Отложена',
    4: 'Выполнена',
}
spis = list(statuses.values())
date_tmp = tmp_date = ''
end = True
# Ввод нескольких заметок (Менеджер заметок)
print('Добро пожаловать в "Менеджер заметок"!')
while True:
    note1 = inp_note(note1, new)
    if len(note1) != 0:
        note.append(note1)
        note1 = []
    else:
        new -=1
    change = input(f'Хотите добавить ещё одну заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
    if change == '':
        print('\nВвод информации окончен.')
        break
    else:
        while not (change in change_stat):
            print(f'Введено не корректное значение. Возможен один из перечисленных ответов на вопрос:  {change_stat}')
            change = input(f'Хотите добавить ещё одну заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
            if change == '':
                print('\nВвод информации окончен.')
                break
            else: continue
        if change in change_stat[::2]:
            new += 1
        else:
            break
# вывод информации из списка словарей на экран
print(F'\nВ словарь внесены сведения о {len(note)} заметках:')
out_note(note)
change = ''
if len(note) == 0:
    print('\nСписок заметок пустой.')
else:
    # удаление информации о заментке из списка словарей
    print('\nПроверьте введенные данные. \nВ случае выявления ошибки - ошибочную заметку можно удалить.')
    out_note(note)
    while True:
        if len(note) == 0:
            print('\nСписок заметок пустой.')
            break
        change = input(f' Надо удалить некорректную заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
        if change == '': break
        else:
            while not (change in change_stat):
                if change == '': break
                print(f'Введено не корректное значение. Возможен один из перечисленных ответов на вопрос:  {change_stat}')
                change = input(f'Надо удалить некорректную заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
            if change == '':
                break
            if change in change_stat[::2]:
                tmp_new = input(f'Введите имя пользователя или заголовок заметки, которую надо удалить: ')
                print(F'  В списке содержится {len(note)} заметок. Удаляется запись с заголовком и/или пользователем = {tmp_new}')
                length = 0
                new = 0
                while length < len(note):
                    # удаление заметки с указанным пользователем заголовком и/или именем пользователя (без учета регистра ввода)
                    if tmp_new.lower() == note[length]['Пользователь'].lower() or tmp_new.lower() == note[length]['Заголовок'].lower():
                        print(F'Заметка № {note[length]['ID']} удалена. В списке осталось: {len(note)-1} заметок.')
                        del note[length]
                        new += 1
                        length += 1
                    else:
                        length += 1
                if new == 0:
                    print(F'Заметка с пользователе или заголовком "{tmp_new}" не найдена. В списке осталось: {len(note)} заметок.')
            else:
                break
        continue
    # вывод итоговой информации из списка словарей на экран
    print('\nОстались следующие сведения о заметках:')
    out_note(note)

