# Grade 1. Этап 2: Задание 4
# Работа с несколькими заметками
# Программа позволяет:
# - Вводить список заметок, при этом проверяет:
#       -- соответствие формата вводимых дат
#       -- чтобы заголовок заметки был не пустой
# - Удалять ошибочно введенную заметку (по желанию пользователя), при этом проверяет:
#       -- корректность номера ID удаляемой заметки
#           (в том числе случай, когда пользователь случайно вводит не цифровое значение)
#       -- не пустой ли список
# Осушествляется вывод на экран результирующего списка заметок:
# после ввода списка и после удаления ошибочных заметок

# Функция проверки корректности номера заметки
def korr_note(ii):
    # проверяем  корректность введенного номера статуса. В случае некорректности ввода - запрос на повторный ввод номера статуса
    if int(ii) < 1 or int(ii) > len(note):
        dd = False
    else:
        dd = True
    while dd == False:
        print(f'Введено неверное значение. Номер заметки - целое число от 1 до {len(note)}.')
        while True:
            try:
                ii = int(input(f'Введите номер заметки, которую надо удалить (целое число от 1 до {len(note)}): '))
            except ValueError:
                print(f'Введено неверное значение. Номер заметки целое число от 1 до {len(note)}.')
            else:
                break
        if ii >= 1 and ii <= len(note):
            break
        else:
            continue
    return ii

# Ввод даты окончания заметки и проверка корректности введенной даты (соответствия её требуемому формату "ДД-ММ-ГГГГ")
def vvod_date(date_tmp, text1):
    from datetime import datetime
    while True:
        try:
            tnp_date = datetime.strptime(input(f'Введите дату {text1} заметки (дд-мм-гггг): '),'%d-%m-%Y')
        except ValueError:
            print('Введено неверное значение даты. Дата должна быть в формате (дд-мм-гггг)/')
        else:
            date_tmp = tnp_date.strftime("%d-%m-%Y")
            break
    return date_tmp

# Функция ввода и хранения списка словарей (заметок)
def vvod_note(note1, new):
    print(f'Вы моэжете добавить новую заметку. Заметка № {new}:')
    username = input('Имя пользователя: ')
    content = input('Описание заметки: ')
    status = input('Статус заметки: ')
    text1 = 'создания'
    created_date = vvod_date(date_tmp,text1)
    text1 = 'истечения'
    issue_date = vvod_date(date_tmp,text1)
    # Ввод заголовка заметки. Проверка, чтобы он не был пустой
    while True:
        title = input('Заголовок заметки (не может быть пустым): ')
        if title == '':
            print(f'Заголовок не может быть пустым.')
            continue
        else:
            break
    # дополнение списка введенными данными
    note1 = {
        'ID':new,
        'Пользователь': username,
        'Описание заметки': content,
        'Статус': status,
        'Дата создания ': created_date,
        'Дата создания заметки': created_date,
        'Дата истечения заметки': issue_date,
        'Заголовок': title
    }
    return note1

# вывод информации из списка словарей на экран
def out_note():
    for i in range(len(note)):
        print(f'Заметка № {note[i]['ID']} : ')
        print(f'Пользователь: {note[i]['Пользователь']} ')
        print(f'Описание заметки: {note[i]['Описание заметки']} ')
        print(f'Статус заметки: {note[i]['Статус']} ')
        print(f'Дата создания заметки (дд-мм-гггг): {note[i]['Дата создания заметки']} ')
        print(f'Заметка актуальна до (дд-мм-гггг): {note[i]['Дата истечения заметки']} ')
        print(f'Заголовок заметки : {note[i]['Заголовок']} ')
    return

text = ''
date_tmp = ''
tmp_date = ''
note = note1 = []
iizm = ['yes', 'no', 'y', 'n', 'да', 'нет', 'д', 'н', 'Yes', 'No', 'Y', 'N', 'Да', 'Нет', 'Д', 'Н', 'YES', 'NO', 'ДА', 'НЕТ']
izm = ''
new = 1
print('Добро пожаловать в "Менеджер заметок"!')
# Ввод нескольких заметок
while True:
    note1 = vvod_note(note1, new)
    note.append(note1)
    izm = input(f'Хотите добавить ещё одну заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
    if izm == '':
        break
    else:
        while not (izm in iizm):
            print(f'Введено не корректное значение. Возможен один из перечисленных ответов на вопрос:  {iizm}')
            izm = input(f'Хотите добавить ещё одну заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
            if izm == '':
                break
            continue
        if izm in iizm[::2]:
            new += 1
        else:
            break
# вывод информации из списка словарей на экран
print('\nВнесены следующие сведения о заметках:')
out_note()
if len(note) == 0:
    print('\nСписок заметок пустой.')
else:
    # удаление информации о заментке из списка словарей
    print('\nПроверьте введенные данные. \nВ случае выявления ошибки - ошибочную заметку можно удалить.')
    while True:
        if len(note) == 0:
            print('\nСписок заметок пустой.')
            break
        izm = input(f'Надо удалить некорректную заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
        if izm == '':
            break
        else:
            while not (izm in iizm):
                print(f'Введено не корректное значение. Возможен один из перечисленных ответов на вопрос:  {iizm}')
                izm = input(f'Надо удалить некорректную заметку? Если да - введите: "да"(д) или "yes" (y).\n Если нет - введите:"нет"(н) или "no"(n) или оставьте поле пустым (нажмите Enter): ')
                if izm == '':
                    break
                continue
            if izm in iizm[::2]:
                while True:
                    try:
                        tmp_new = int(input(f'Введите номер заметки, которую надо удалить (целое число от 1 до {len(note)}): '))
                    except ValueError:
                        print(f'Введено неверное значение. Номер заметки - это целое число от 1 до {len(note)}.')
                    else:
                        break
                new = korr_note(tmp_new)
                new = int(new)
                i = 0
                while i < len(note):
                    if note[i]['ID'] == new:
                        del note[i]
                        print(F'Заметка № {new} удалена. В списке осталось: {len(note)} заметок.')
                        break
                    else:
                        i += 1
                        continue
            else:
                break
        continue
    # вывод итоговой информации из списка словарей на экран
    print('\nОстались следующие сведения о заметках:')
    out_note()
    
